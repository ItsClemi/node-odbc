-
  branches:
    only:
      - master

  os: Visual Studio 2017

  configuration: 
    - release

  services:
    - mssql2016
    - mysql
    - postgresql

  platform:
    - x64
    - x86

  version: "{build}"


  cache:
    - '%userprofile%\.node-gyp'
    - '%AppData%\npm-cache'

  environment:
    SKIP_NODE_ODBC_BINARY_DOWNLOAD_ON_CI: true
    NODE_ODBC_TEST_USE_APPVEYOR_CONFIG: true

    matrix:
      - nodejs_version: 6
        GYP_MSVS_VERSION: 2017
        APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017



  install:
    - ps: Install-Product node $env:nodejs_version $env:platform
    - node --version
    - npm --version
    - npm install
    - cmd: SET PATH=%cd%\node_modules\.bin\;%PATH%
    - cmd: typings install
  
  build_script:
    - cmd: tsc -p dist
    - cmd: tsc -p test
    - cmd: node-gyp configure
    - cmd: node-gyp build

  before_deploy:
    # Save artifacts with full qualified names of binding.node and binding.pdb
    # (which we use in node-sass-binaries repo)
    - ps: >-
        Get-ChildItem .\vendor\**\*.node | % {
           ( $BindingName = $_.FullName ).Split('\\') |
             Select-Object -Last 2 | Select-Object -First 1 } |
               .{ process { (
                  @( $BindingName,
                       ( ( $_, "node-odbc.node" ) -join '_' ) ),
                  @( ".\build\Release\node-odbc.pdb",
                       ( ( $_, "node-odbc.pdb" ) -join '_' ) )
               ) } } | % { Push-AppveyorArtifact $_[0] -FileName $_[1] }

  deploy:
    - provider: GitHub
      description: $(APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED)
      artifact:
      auth_token:
        secure: 3nVOtEyNM2nI0/3mVltASP4rtBfLXWLYeqfjRfnIITF+AyT6gKf99JsaPiNERx4f
      on:
        appveyor_repo_tag: true       # deploy on tag push only


#  on_success:
#    - cmd: mkdir vendor
#    - npm run test